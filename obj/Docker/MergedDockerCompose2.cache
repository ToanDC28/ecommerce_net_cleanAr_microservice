name: dockercompose3811543418194584032
services:
  catalog.api:
    build:
      context: D:\CShaft\API\cleanAr\Ecommerce
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      catalogdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__Connection: mongodb://catalogdb:27017/?readPreference=primary&ssl=false
      DatabaseSetting__Brand: Brand
      DatabaseSetting__DatabaseName: Catalog
      DatabaseSetting__Product: Product
      DatabaseSetting__Type: Type
      ElasticConfiguration__Uri: http://elasticsearch:9200
    image: catalogapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8000"
        protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
networks:
  default:
    name: dockercompose3811543418194584032_default
volumes:
  mongo_data:
    name: dockercompose3811543418194584032_mongo_data